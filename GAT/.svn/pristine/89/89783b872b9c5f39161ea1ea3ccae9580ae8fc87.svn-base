package com.baidu.gameqa.Gat.manager;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.baidu.gameqa.Gat.dataobject.TestObject;
import com.baidu.gameqa.Gat.dataobject.testcase.InterfaceSingleStepCase;
import com.baidu.gameqa.Gat.dataobject.testcase.SingleStepCase;
import com.baidu.gameqa.Gat.dataobject.testcase.TestCase;
import com.baidu.gameqa.Gat.util.GlobalConfig;
import com.baidu.gameqa.Lib.common.ClassReflector;
import com.baidu.gameqa.Lib.common.ConfigReader;
import com.baidu.gameqa.Lib.excelservice.ExcelReader;

public class InterfaceSingleStepCaseManager implements ITestCaseManager
{

	private List<String> headers=new ArrayList<>();
	
	@Override
	public TestObject getItem(String ID) throws Exception 
	{
		TestCase singleStepCase=geTestCase(ID);
		return singleStepCase;
	}

	@Override
	public TestCase geTestCase(String caseID) throws Exception
	{
		String[] caseIDs=caseID.split(".");
		List<String> rowValue=getRow("ID",caseIDs[1],caseIDs[0]);
		List<String> headersList=getHeaders(caseIDs[0]);
		return createCase(rowValue, headersList);
	}
	
	private InterfaceSingleStepCase createCase(List<String> row,List<String> headers) throws Exception
	{
        InterfaceSingleStepCase resultCase=new InterfaceSingleStepCase();
        Map<String,String> urlParameters=new HashMap<String,String>();
        for(Integer i=0;i<headers.size();i++)
        {
        	if(headers.get(i).startsWith(GlobalConfig.getUrlParametersSignal()))
        	{
        		urlParameters.put(headers.get(i),row.get(i));
        	}
        	else
        	{
        		ClassReflector.setFiled(resultCase.getClass(),resultCase,headers.get(i),row.get(i));
			}
        	ClassReflector.setFiled(resultCase.getClass(),resultCase,"UrlParameters",urlParameters);
        }
		return resultCase;
	}
	
    private List<String> getHeaders(String sheetName)
	{
	   ExcelReader reader=new ExcelReader();
	   headers= reader.readData(GlobalConfig.getTestCaseFilePath(),sheetName,0);
	   return headers;
	}
	
    private List<String> getRow(String colunmName,String value,String sheetName)
	{    
		ExcelReader reader=new ExcelReader();
		List<List<String>> allrows=reader.readAllData(GlobalConfig.getTestCaseFilePath(),sheetName);
		List<String> resultRow=null;
		Integer columnIndex=getColumnIndex(colunmName,getHeaders(sheetName));
		for(List<String> row : allrows)
		{
		   resultRow=row;
		   if(row.get(columnIndex).equals(value))
		   {
			   break;
		   }
		}
		return resultRow;
	}
	
	private Integer getColumnIndex(String cloumnName,List<String> headers)
	{
        Integer columnIndex=0;
        for(String item : headers)
        {
             if(item.equals(cloumnName))
             {
            	 break;
             }
             columnIndex++;
        }
        return columnIndex;
	}

}
