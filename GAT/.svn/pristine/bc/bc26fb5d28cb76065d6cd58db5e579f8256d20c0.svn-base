package com.baidu.gameqa.Gat.executor;

import com.baidu.gameqa.Gat.dataobject.EnumObjectManager;
import com.baidu.gameqa.Gat.dataobject.InvokedMethodInfo;
import com.baidu.gameqa.Gat.dataobject.testcase.InterfaceMulitStepsCase;
import com.baidu.gameqa.Gat.dataobject.testcase.TestStep;
import com.baidu.gameqa.Gat.util.GlobalConfig;
import com.baidu.gameqa.Gat.util.StepValuePool;


public class InterfaceMulitStepsExecutor extends CaseExecutor
{
	private String caseID="";
	private String caseFilePath="";	
    private InterfaceMulitStepsCase targetCase=null;

	public InterfaceMulitStepsExecutor(String caseID,String caseFilePath)
	{
		this.caseFilePath="DataFiles"+GlobalConfig.getSlash()+"Xmls"+GlobalConfig.getSlash()+caseFilePath;
		this.caseID=caseID;
	}
	

	@Override
	public void setUp() throws Exception
    {
		 preCleanup();
		 setGlobalConfig();
		 exectuePreStep();
		
	}
	
	@Override
	public void executeCase() throws Exception 
	{
		for(TestStep step : targetCase.Steps)
		{
			GlobalConfig.setStepsParameterFilePath("DataFiles\\Xmls\\"+step.StepParametersFilePath); //set glocal config for pre step parameters
			InvokedMethodInfo resultInfo=getMulitStepMethodInfo(step);
			invokeMethod(resultInfo);
		}
		
	}

	@Override
	public void tearDown() throws Exception 
	{
		GlobalConfig.setStepsParameterFilePath("DataFiles"+GlobalConfig.getSlash()+"Xmls"+GlobalConfig.getSlash()+"TearDownParameters.xml"); //set glocal config for pre step parameters
		if(targetCase.TearDownType!=null)
		{
			switch (targetCase.TearDownType.ordinal())
			{
			case 0:
				executeSql(targetCase.TearDown);
				break;
			case 1:
				invokeDBStep(targetCase.TearDown);
			case 2:
				InvokedMethodInfo methodInfo= parserPreStepMethodInfo(targetCase.TearDown,null);
				invokeMethod(methodInfo);
			}
		}
		
	}

	private void setGlobalConfig()
	{
		GlobalConfig.setTestCaseFilePath(this.caseFilePath); //set global config for testcase file path	
	}

	private void exectuePreStep() throws Exception
	{
		targetCase=(InterfaceMulitStepsCase)getTestObject(this.caseID,EnumObjectManager.IMulitStepsCaseManager);
		GlobalConfig.setStepsParameterFilePath("DataFiles\\Xmls\\SetupParameters.xml"); //set glocal config for pre step parameters
		if(targetCase.SetupType!=null)
		{
			switch (targetCase.SetupType.ordinal())
			{
			case 0:
				executeSql(targetCase.Setup);
				break;
			case 1:
				invokeDBStep(targetCase.Setup);
			case 2:
				InvokedMethodInfo methodInfo= parserPreStepMethodInfo(targetCase.Setup,null);
				Object returnValue=invokeMethod(methodInfo);
				StepValuePool.createInstance().getValueDic().put(GlobalConfig.getPreStepResult(),returnValue);
			}
		}
		
	}

    private InvokedMethodInfo getMulitStepMethodInfo(TestStep step)
    {
    	InvokedMethodInfo resultInfo=new InvokedMethodInfo();
    	resultInfo.classFullName=step.StepAssembly+step.StepGroup;
    	resultInfo.methodName=step.StepName;
    	resultInfo.parameters.add(step.StepParameterID);
    	resultInfo.jarFilePath=GlobalConfig.getStepMethodJarPath();
    	return resultInfo;
    }

}
