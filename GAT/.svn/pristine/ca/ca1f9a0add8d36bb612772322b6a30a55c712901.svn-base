package com.baidu.gameqa.Gat.manager;

import java.util.ArrayList;
import java.util.List;

import com.baidu.gameqa.Gat.dataobject.TestObject;
import com.baidu.gameqa.Gat.dataobject.testcase.InterfaceSingleStepCase;
import com.baidu.gameqa.Gat.dataobject.testcase.SingleStepCase;
import com.baidu.gameqa.Gat.dataobject.testcase.TestCase;
import com.baidu.gameqa.Gat.util.GlobalConfig;
import com.baidu.gameqa.Lib.common.ConfigReader;
import com.baidu.gameqa.Lib.excelservice.ExcelReader;

public class InterfaceSingleStepCaseManager implements ITestCaseManager
{

	private List<String> headers=new ArrayList<>();
	
	@Override
	public TestObject getItem(String ID) 
	{
		TestCase singleStepCase=geTestCase(ID);
		return singleStepCase;
	}

	@Override
	public TestCase geTestCase(String caseID)
	{
		
		return null;
	}
	
	private InterfaceSingleStepCase createCase(List<String> row,List<String> headers)
	{

		return null;
	}
	private List<String> getHeaders(String sheetName)
	{
	   ExcelReader reader=new ExcelReader();
	   headers= reader.readData(GlobalConfig.getTestCaseFilePath(),sheetName,0);
	   return headers;
	}
	private List<String> getRow(String ID,String sheetName)
	{    
		ExcelReader reader=new ExcelReader();
		List<List<String>> allrows=reader.readAllData(GlobalConfig.getTestCaseFilePath(),sheetName);
		List<String> resultRow=null;
		Boolean foundRow=false;
		for(List<String> row : allrows)
		{
		   resultRow=row;
           for(String value : row)
           {
        	   if(value.equals(ID))
        	   {
        		   foundRow=true;
        		   break;
        	   }
           }
           if(foundRow)
           {
        	   break;
           }
		}
		return resultRow;
	}
	
	private Integer getColumnIndex(String cloumnName,List<String> headers)
	{
        Integer columnIndex=0;
        for(String item : headers)
        {
             if(item.equals(cloumnName))
             {
            	 break;
             }
             columnIndex++;
        }
        return columnIndex;
	}

}
